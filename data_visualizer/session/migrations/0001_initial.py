# Generated by Django 4.2.9 on 2024-03-31 18:32

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BusinessInitiativeProgram',
            fields=[
                ('bip_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('deliverables', models.TextField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('contact', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'bips',
            },
        ),
        migrations.CreateModel(
            name='Consultant',
            fields=[
                ('consultant_id', models.AutoField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('slug', models.SlugField(blank=True, max_length=200, null=True, unique=True)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('phone', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('specialty', models.CharField(choices=[('1', 'Capital Specialist'), ('2', 'Financial Specialist'), ('3', 'Licensing Specialist'), ('4', 'Cultural Specialist'), ('5', 'Technology Specialist'), ('6', 'Other')], max_length=2)),
                ('bip_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='session.businessinitiativeprogram')),
            ],
            options={
                'db_table': 'consultants',
            },
        ),
        migrations.AddConstraint(
            model_name='consultant',
            constraint=models.CheckConstraint(check=models.Q(('specialty__in', ['1', '2', '3', '4', '5', '6'])), name='valid_specialty'),
        ),
    ]
